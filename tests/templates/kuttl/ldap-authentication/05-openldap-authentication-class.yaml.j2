---
apiVersion: kuttl.dev/v1beta1
kind: TestStep
metadata:
  name: openldap
commands:
  - script: |
      kubectl apply -n $NAMESPACE -f - <<EOF
      ---
      apiVersion: authentication.stackable.tech/v1alpha1
      kind: AuthenticationClass
      metadata:
        name: druid-ldap-auth-class-$NAMESPACE # As the AuthenticationClass has cluster scope and we have mutiple tests running in parallel we need to name them uniquely
      spec:
        provider:
          ldap:
            hostname: openldap.$NAMESPACE.svc.cluster.local # Need to use fqdn so that tls cert matches
            searchBase: ou=users,dc=example,dc=org
            searchFilter: (uid=%s)
{% if test_scenario['values']['ldap-use-tls'] == 'false' %}
            port: 1389
            tls: null
{% else %}
            port: 1636
            tls:
              verification:
                server:
                  caCert:
                    secretClass: openldap-tls
{% endif %}
{% if test_scenario['values']['ldap-no-bind-credentials'] == 'true' %}
            bindCredentials: null
{% else %}
            bindCredentials:
              secretClass: druid-ldap-secret
{% endif %}
      ---
      apiVersion: secrets.stackable.tech/v1alpha1
      kind: SecretClass
      metadata:
        name: druid-ldap-secret
      spec:
        backend:
          k8sSearch:
            searchNamespace:
              pod: {}
      ---
      apiVersion: v1
      kind: Secret
      metadata:
        name: druid-ldap-secret
        labels:
          secrets.stackable.tech/class: druid-ldap-secret
      stringData:
        user: cn=admin,dc=example,dc=org
        password: admin
      EOF
