---
apiVersion: kuttl.dev/v1beta1
kind: TestStep
metadata:
  name: install-druid
timeout: 600
---
apiVersion: authentication.stackable.tech/v1alpha1
kind: AuthenticationClass
metadata:
  name: druid-ldap-auth-class
spec:
  provider:
    ldap:
      hostname: openldap.default.svc.cluster.local
      searchBase: ou=Users,dc=example,dc=org
      searchFilter: (&(uid=%s)(objectClass=inetOrgPerson))
      port: 1389
      bindCredentials:
        secretClass: druid-ldap-secret
---
apiVersion: secrets.stackable.tech/v1alpha1
kind: SecretClass
metadata:
  name: druid-ldap-secret
spec:
  backend:
    k8sSearch:
      searchNamespace:
        pod: {}
---
apiVersion: v1
kind: Secret
metadata:
  name: druid-ldap-secret
  labels:
    secrets.stackable.tech/class: druid-with-ldap-bind
stringData:
  LDAP_ADMIN_USER: uid=admin,ou=Users,dc=example,dc=org
  LDAP_ADMIN_PASSWORD: admin
  LDAP_INTERNAL_USER: druid_system
  LDAP_INTERNAL_PASSWORD: druidsystem
---
apiVersion: druid.stackable.tech/v1alpha1
kind: DruidCluster
metadata:
  name: derby-druid
spec:
  version: {{ test_scenario['values']['druid'] }}
  clusterConfig:
    authentication:
      ldap:
        authenticationClass: druid-ldap-auth-class
    deepStorage:
      hdfs:
        configMapName: druid-hdfs
        directory: /druid
    metadataStorageDatabase:
      dbType: derby
      connString: jdbc:derby://localhost:1527/var/druid/metadata.db;create=true
      host: localhost
      port: 1527
    tls: null
    zookeeperConfigMapName: druid-znode
  brokers:
    roleGroups:
      default:
        replicas: 1
  coordinators:
    roleGroups:
      default:
        replicas: 1
  historicals:
    roleGroups:
      default:
        replicas: 1
  middleManagers:
    roleGroups:
      default:
        replicas: 1
  routers:
    roleGroups:
      default:
        replicas: 1
