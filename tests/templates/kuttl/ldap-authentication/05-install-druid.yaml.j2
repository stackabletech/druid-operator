---
apiVersion: kuttl.dev/v1beta1
kind: TestStep
metadata:
  name: install-druid
timeout: 600
---
apiVersion: druid.stackable.tech/v1alpha1
kind: DruidCluster
metadata:
  name: derby-druid
spec:
  version: {{ test_scenario['values']['druid'] }}
  clusterConfig:
    deepStorage:
      hdfs:
        configMapName: druid-hdfs
        directory: /druid
    metadataStorageDatabase:
      dbType: derby
      connString: jdbc:derby://localhost:1527/var/druid/metadata.db;create=true
      host: localhost
      port: 1527
    tls: null
    zookeeperConfigMapName: druid-znode
  brokers:
    configOverrides:
      runtime.properties:    
        druid.auth.authenticatorChain: "[\"ldap\"]"
        druid.auth.authenticator.ldap.type: basic
        druid.auth.authenticator.ldap.enableCacheNotifications: 'true'
        druid.auth.authenticator.ldap.credentialsValidator.type: ldap
        druid.auth.authenticator.ldap.credentialsValidator.url: ldap://openldap:1389
        druid.auth.authenticator.ldap.credentialsValidator.bindUser: uid=admin,ou=Users,dc=example,dc=org
        druid.auth.authenticator.ldap.credentialsValidator.bindPassword: admin
        druid.auth.authenticator.ldap.initialAdminPassword: admin
        druid.auth.authenticator.ldap.initialInternalClientPassword: druidsystem
        druid.auth.authenticator.ldap.credentialsValidator.baseDn: ou=Users,dc=example,dc=org
        druid.auth.authenticator.ldap.credentialsValidator.userSearch: (&(uid=%s)(objectClass=inetOrgPerson))
        druid.auth.authenticator.ldap.credentialsValidator.userAttribute: uid
        druid.auth.authenticator.ldap.authorizeQueryContextParams: 'true'
        
        # Escalator
        druid.escalator.type: basic
        druid.escalator.internalClientUsername: druid_system
        druid.escalator.internalClientPassword: druidsystem
    roleGroups:
      default:
        replicas: 1
  coordinators:
    configOverrides:
      runtime.properties:
        druid.auth.authenticatorChain: "[\"ldap\"]"
        druid.auth.authenticator.ldap.type: basic
        druid.auth.authenticator.ldap.enableCacheNotifications: 'true'
        druid.auth.authenticator.ldap.credentialsValidator.type: ldap
        druid.auth.authenticator.ldap.credentialsValidator.url: ldap://openldap:1389
        druid.auth.authenticator.ldap.credentialsValidator.bindUser: uid=admin,ou=Users,dc=example,dc=org
        druid.auth.authenticator.ldap.credentialsValidator.bindPassword: admin
        druid.auth.authenticator.ldap.initialAdminPassword: admin
        druid.auth.authenticator.ldap.initialInternalClientPassword: druidsystem
        druid.auth.authenticator.ldap.credentialsValidator.baseDn: ou=Users,dc=example,dc=org
        druid.auth.authenticator.ldap.credentialsValidator.userSearch: (&(uid=%s)(objectClass=inetOrgPerson))
        druid.auth.authenticator.ldap.credentialsValidator.userAttribute: uid
        druid.auth.authenticator.ldap.authorizeQueryContextParams: 'true'

        # Escalator
        druid.escalator.type: basic
        druid.escalator.internalClientUsername: druid_system
        druid.escalator.internalClientPassword: druidsystem
    roleGroups:
      default:
        replicas: 1
  historicals:
    configOverrides:
      runtime.properties:
        druid.auth.authenticatorChain: "[\"ldap\"]"
        druid.auth.authenticator.ldap.type: basic
        druid.auth.authenticator.ldap.enableCacheNotifications: 'true'
        druid.auth.authenticator.ldap.credentialsValidator.type: ldap
        druid.auth.authenticator.ldap.credentialsValidator.url: ldap://openldap:1389
        druid.auth.authenticator.ldap.credentialsValidator.bindUser: uid=admin,ou=Users,dc=example,dc=org
        druid.auth.authenticator.ldap.credentialsValidator.bindPassword: admin
        druid.auth.authenticator.ldap.initialAdminPassword: admin
        druid.auth.authenticator.ldap.initialInternalClientPassword: druidsystem
        druid.auth.authenticator.ldap.credentialsValidator.baseDn: ou=Users,dc=example,dc=org
        druid.auth.authenticator.ldap.credentialsValidator.userSearch: (&(uid=%s)(objectClass=inetOrgPerson))
        druid.auth.authenticator.ldap.credentialsValidator.userAttribute: uid
        druid.auth.authenticator.ldap.authorizeQueryContextParams: 'true'

        # Escalator
        druid.escalator.type: basic
        druid.escalator.internalClientUsername: druid_system
        druid.escalator.internalClientPassword: druidsystem
    roleGroups:
      default:
        replicas: 1
  middleManagers:
    configOverrides:
      runtime.properties:
        druid.auth.authenticatorChain: "[\"ldap\"]"
        druid.auth.authenticator.ldap.type: basic
        druid.auth.authenticator.ldap.enableCacheNotifications: 'true'
        druid.auth.authenticator.ldap.credentialsValidator.type: ldap
        druid.auth.authenticator.ldap.credentialsValidator.url: ldap://openldap:1389
        druid.auth.authenticator.ldap.credentialsValidator.bindUser: uid=admin,ou=Users,dc=example,dc=org
        druid.auth.authenticator.ldap.credentialsValidator.bindPassword: admin
        druid.auth.authenticator.ldap.initialAdminPassword: admin
        druid.auth.authenticator.ldap.initialInternalClientPassword: druidsystem
        druid.auth.authenticator.ldap.credentialsValidator.baseDn: ou=Users,dc=example,dc=org
        druid.auth.authenticator.ldap.credentialsValidator.userSearch: (&(uid=%s)(objectClass=inetOrgPerson))
        druid.auth.authenticator.ldap.credentialsValidator.userAttribute: uid
        druid.auth.authenticator.ldap.authorizeQueryContextParams: 'true'
        
        # Escalator
        druid.escalator.type: basic
        druid.escalator.internalClientUsername: druid_system
        druid.escalator.internalClientPassword: druidsystem
    roleGroups:
      default:
        replicas: 1
  routers:
    configOverrides:
      runtime.properties:    
        druid.auth.authenticatorChain: "[\"ldap\"]"
        druid.auth.authenticator.ldap.type: basic
        druid.auth.authenticator.ldap.enableCacheNotifications: 'true'
        druid.auth.authenticator.ldap.credentialsValidator.type: ldap
        druid.auth.authenticator.ldap.credentialsValidator.url: ldap://openldap:1389
        druid.auth.authenticator.ldap.credentialsValidator.bindUser: uid=admin,ou=Users,dc=example,dc=org
        druid.auth.authenticator.ldap.credentialsValidator.bindPassword: admin
        druid.auth.authenticator.ldap.initialAdminPassword: admin
        druid.auth.authenticator.ldap.initialInternalClientPassword: druidsystem
        druid.auth.authenticator.ldap.credentialsValidator.baseDn: ou=Users,dc=example,dc=org
        druid.auth.authenticator.ldap.credentialsValidator.userSearch: (&(uid=%s)(objectClass=inetOrgPerson))
        druid.auth.authenticator.ldap.credentialsValidator.userAttribute: uid
        druid.auth.authenticator.ldap.authorizeQueryContextParams: 'true'
        
        # Escalator
        druid.escalator.type: basic
        druid.escalator.internalClientUsername: druid_system
        druid.escalator.internalClientPassword: druidsystem
    roleGroups:
      default:
        replicas: 1
