---
apiVersion: kuttl.dev/v1beta1
kind: TestAssert
timeout: 600
commands:
  - script: kubectl -n $NAMESPACE wait --for=condition=available druidclusters.druid.stackable.tech/druid --timeout 301s
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: druid-broker-default
spec:
  template:
    spec:
      terminationGracePeriodSeconds: 1
status:
  readyReplicas: 1
  replicas: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: druid-coordinator-default
spec:
  template:
    spec:
      terminationGracePeriodSeconds: 1
status:
  readyReplicas: 1
  replicas: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: druid-historical-default
spec:
  template:
    spec:
      terminationGracePeriodSeconds: 1
      volumes:
        - name: tls-mount
          ephemeral:
            volumeClaimTemplate:
              metadata:
                annotations:
                  secrets.stackable.tech/class: tls
                  secrets.stackable.tech/scope: pod,node
                creationTimestamp: null
              spec:
                storageClassName: secrets.stackable.tech
        - name: tls
          emptyDir: {}
        - name: config
          configMap:
            name: druid-historical-default
        - name: rwconfig
          emptyDir: {}
        - name: log-config
        - name: log
        - name: hdfs
          configMap:
            name: druid-hdfs
        - name: segment-cache
          emptyDir:
            sizeLimit: 1G
status:
  readyReplicas: 1
  replicas: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: druid-middlemanager-default
spec:
  template:
    spec:
      terminationGracePeriodSeconds: 1
status:
  readyReplicas: 1
  replicas: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: druid-router-default
spec:
  template:
    spec:
      terminationGracePeriodSeconds: 1
status:
  readyReplicas: 1
  replicas: 1
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: druid-broker
status:
  expectedPods: 1
  currentHealthy: 1
  disruptionsAllowed: 1
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: druid-historical
status:
  expectedPods: 1
  currentHealthy: 1
  disruptionsAllowed: 1
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: druid-broker
status:
  expectedPods: 1
  currentHealthy: 1
  disruptionsAllowed: 1
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: druid-middlemanager
status:
  expectedPods: 1
  currentHealthy: 1
  disruptionsAllowed: 1
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: druid-router
status:
  expectedPods: 1
  currentHealthy: 1
  disruptionsAllowed: 1
---
# This test checks if the containerdebug-state.json file is present and valid
apiVersion: kuttl.dev/v1beta1
kind: TestAssert
timeout: 600
commands:
  - script: kubectl exec -n $NAMESPACE --container druid druid-coordinator-default-0 -- cat /stackable/log/containerdebug-state.json | jq --exit-status
  - script: kubectl exec -n $NAMESPACE --container druid druid-router-default-0 -- cat /stackable/log/containerdebug-state.json | jq --exit-status
  - script: kubectl exec -n $NAMESPACE --container druid druid-middlemanager-default-0 -- cat /stackable/log/containerdebug-state.json | jq --exit-status
  - script: kubectl exec -n $NAMESPACE --container druid druid-router-default-0 -- cat /stackable/log/containerdebug-state.json | jq --exit-status
  - script: kubectl exec -n $NAMESPACE --container druid druid-historical-default-0 -- cat /stackable/log/containerdebug-state.json | jq --exit-status
