---
apiVersion: kuttl.dev/v1beta1
kind: TestStep
metadata:
  name: install-druid
timeout: 600
---
apiVersion: druid.stackable.tech/v1alpha1
kind: DruidCluster
metadata:
  name: druid
spec:
  image:
{% if test_scenario['values']['druid'].find(",") > 0 %}
    custom: "{{ test_scenario['values']['druid'].split(',')[1] }}"
    productVersion: "{{ test_scenario['values']['druid'].split(',')[0] }}"
{% else %}
    productVersion: "{{ test_scenario['values']['druid'] }}"
{% endif %}
    pullPolicy: IfNotPresent
  clusterConfig:
    deepStorage:
      hdfs:
        configMapName: druid-hdfs
        directory: /druid
    metadataStorageDatabase:
      dbType: postgresql
      connString: jdbc:postgresql://druid-postgresql/druid
      host: druid-postgresql
      port: 5432
      credentialsSecret: druid-credentials
{% if lookup('env', 'VECTOR_AGGREGATOR') %}
    vectorAggregatorConfigMapName: vector-aggregator-discovery
{% endif %}
    zookeeperConfigMapName: druid-znode
  brokers:
    config:
      gracefulShutdownTimeout: 1s # Let the test run faster
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
    roleGroups:
      default:
        replicas: 1
  coordinators:
    config:
      gracefulShutdownTimeout: 1s # Let the test run faster
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
    roleGroups:
      default:
        replicas: 1
  historicals:
    config:
      gracefulShutdownTimeout: 1s # Let the test run faster
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
    roleGroups:
      default:
        replicas: 1
  middleManagers:
    config:
      gracefulShutdownTimeout: 1s # Let the test run faster
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
    roleGroups:
      default:
        replicas: 1
  routers:
    config:
      gracefulShutdownTimeout: 1s # Let the test run faster
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
    roleGroups:
      default:
        replicas: 1
---
apiVersion: v1
kind: Secret
metadata:
  name: druid-credentials
type: Opaque
stringData:
  username: druid
  password: druid
