---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: druid-checks-sa
{% if test_scenario['values']['openshift'] == 'true' %}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: druid-checks-role
rules:
- apiGroups: ["security.openshift.io"]
  resources: ["securitycontextconstraints"]
  resourceNames: ["privileged"]
  verbs: ["use"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: druid-checks-rolebinding
subjects:
  - kind: ServiceAccount
    name: druid-checks-sa
roleRef:
  kind: Role
  name: druid-checks-role
  apiGroup: rbac.authorization.k8s.io
{% endif %}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: druid-checks
  labels:
    app: druid-checks
spec:
  replicas: 1
  serviceName: druid-checks
  selector:
    matchLabels:
      app: druid-checks
  template:
    metadata:
      labels:
        app: druid-checks
    spec:
      serviceAccountName: druid-checks-sa
      securityContext:
        runAsUser: 0
      containers:
        - name: druid-checks
          image: docker.stackable.tech/stackable/testing-tools:0.2.0-stackable0.0.0-dev
          command: ["sleep", "infinity"]
          volumeMounts:
{% if test_scenario['values']['tls-mode'] == 'internal-and-server-tls' or test_scenario['values']['tls-mode'] == 'internal-and-server-tls-and-tls-client-auth' %}
            - name: druid-tls
              mountPath: /tmp/druid-tls
            - name: tls
              mountPath: /tmp/tls
      volumes:
        - name: druid-tls
          ephemeral:
            volumeClaimTemplate:
              metadata:
                annotations:
                  secrets.stackable.tech/class: druid-tls
                  secrets.stackable.tech/scope: pod,node
              spec:
                storageClassName: secrets.stackable.tech
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: "1"
        - name: tls
          ephemeral:
            volumeClaimTemplate:
              metadata:
                annotations:
                  secrets.stackable.tech/class: tls
                  secrets.stackable.tech/scope: pod,node
              spec:
                storageClassName: secrets.stackable.tech
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: "1"
{% endif %}
