---
apiVersion: kuttl.dev/v1beta1
kind: TestStep
metadata:
  name: install-druid
commands:
  - script: |
      kubectl apply -n $NAMESPACE -f - <<EOF
      ---
      apiVersion: druid.stackable.tech/v1alpha1
      kind: DruidCluster
      metadata:
        name: derby-druid
      spec:
        image:
{% if test_scenario['values']['druid'].find(",") > 0 %}
          custom: "{{ test_scenario['values']['druid'].split(',')[1] }}"
          productVersion: "{{ test_scenario['values']['druid'].split(',')[0] }}"
{% else %}
          productVersion: "{{ test_scenario['values']['druid'] }}"
{% endif %}
          pullPolicy: IfNotPresent
        clusterConfig:
          authentication:
            - authenticationClass: druid-ldap-auth-class-$NAMESPACE
          deepStorage:
            hdfs:
              configMapName: druid-hdfs
              directory: /druid
          metadataStorageDatabase:
            dbType: derby
            connString: jdbc:derby://localhost:1527/var/druid/metadata.db;create=true
            host: localhost
            port: 1527
          zookeeperConfigMapName: druid-znode
{% if lookup('env', 'VECTOR_AGGREGATOR') %}
          vectorAggregatorConfigMapName: vector-aggregator-discovery
{% endif %}
        brokers:
          config:
            gracefulShutdownTimeout: 1s # Let the test run faster
            logging:
              enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
          roleGroups:
            default:
              replicas: 1
        coordinators:
          config:
            gracefulShutdownTimeout: 1s # Let the test run faster
            logging:
              enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
          roleGroups:
            default:
              replicas: 1
        historicals:
          config:
            gracefulShutdownTimeout: 1s # Let the test run faster
            logging:
              enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
          roleGroups:
            default:
              replicas: 1
        middleManagers:
          config:
            gracefulShutdownTimeout: 1s # Let the test run faster
            logging:
              enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
          roleGroups:
            default:
              replicas: 1
        routers:
          config:
            gracefulShutdownTimeout: 1s # Let the test run faster
            logging:
              enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
          roleGroups:
            default:
              replicas: 1
---
apiVersion: v1
kind: Secret
metadata:
  name: druid-with-ldap-bind-secret
  labels:
    secrets.stackable.tech/class: druid-with-ldap-bind
stringData:
  user: cn=integrationtest,ou=my users,dc=example,dc=org
  password: >
    bindPasswordWithSpecialCharacter\@<&>"'
