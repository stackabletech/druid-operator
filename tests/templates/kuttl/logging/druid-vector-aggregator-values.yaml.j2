---
role: Aggregator
service:
  ports:
  - name: api
    port: 8686
    protocol: TCP
    targetPort: 8686
  - name: vector
    port: 6123
    protocol: TCP
    targetPort: 6000
customConfig:
  api:
    address: 0.0.0.0:8686
    enabled: true
  sources:
    vector:
      address: 0.0.0.0:6000
      type: vector
      version: "2"
  transforms:
    automaticLogConfigBrokerDruid:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-broker-automatic-log-config-0" &&
        .container == "druid"
    automaticLogConfigBrokerPrepare:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-broker-automatic-log-config-0" &&
        .container == "prepare"
    automaticLogConfigBrokerVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-broker-automatic-log-config-0" &&
        .container == "vector"
    customLogConfigBrokerDruid:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-broker-custom-log-config-0" &&
        .container == "druid"
    customLogConfigBrokerPrepare:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-broker-custom-log-config-0" &&
        .container == "prepare"
    customLogConfigBrokerVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-broker-custom-log-config-0" &&
        .container == "vector"
    automaticLogConfigCoordinatorDruid:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-coordinator-automatic-log-config-0" &&
        .container == "druid"
    automaticLogConfigCoordinatorPrepare:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-coordinator-automatic-log-config-0" &&
        .container == "prepare"
    automaticLogConfigCoordinatorVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-coordinator-automatic-log-config-0" &&
        .container == "vector"
    customLogConfigCoordinatorDruid:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-coordinator-custom-log-config-0" &&
        .container == "druid"
    customLogConfigCoordinatorPrepare:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-coordinator-custom-log-config-0" &&
        .container == "prepare"
    customLogConfigCoordinatorVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-coordinator-custom-log-config-0" &&
        .container == "vector"
    automaticLogConfigHistoricalDruid:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-historical-automatic-log-config-0" &&
        .container == "druid"
    automaticLogConfigHistoricalPrepare:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-historical-automatic-log-config-0" &&
        .container == "prepare"
    automaticLogConfigHistoricalVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-historical-automatic-log-config-0" &&
        .container == "vector"
    customLogConfigHistoricalDruid:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-historical-custom-log-config-0" &&
        .container == "druid"
    customLogConfigHistoricalPrepare:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-historical-custom-log-config-0" &&
        .container == "prepare"
    customLogConfigHistoricalVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-historical-custom-log-config-0" &&
        .container == "vector"
    automaticLogConfigMiddlemanagerDruid:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-middlemanager-automatic-log-config-0" &&
        .container == "druid"
    automaticLogConfigMiddlemanagerPrepare:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-middlemanager-automatic-log-config-0" &&
        .container == "prepare"
    automaticLogConfigMiddlemanagerVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-middlemanager-automatic-log-config-0" &&
        .container == "vector"
    customLogConfigMiddlemanagerDruid:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-middlemanager-custom-log-config-0" &&
        .container == "druid"
    customLogConfigMiddlemanagerPrepare:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-middlemanager-custom-log-config-0" &&
        .container == "prepare"
    customLogConfigMiddlemanagerVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-middlemanager-custom-log-config-0" &&
        .container == "vector"
    automaticLogConfigRouterDruid:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-router-automatic-log-config-0" &&
        .container == "druid"
    automaticLogConfigRouterPrepare:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-router-automatic-log-config-0" &&
        .container == "prepare"
    automaticLogConfigRouterVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-router-automatic-log-config-0" &&
        .container == "vector"
    customLogConfigRouterDruid:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-router-custom-log-config-0" &&
        .container == "druid"
    customLogConfigRouterPrepare:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-router-custom-log-config-0" &&
        .container == "prepare"
    customLogConfigRouterVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-router-custom-log-config-0" &&
        .container == "vector"
  sinks:
    out:
      inputs: [automaticLogConfig*, customLogConfig*]
{% if lookup('env', 'VECTOR_AGGREGATOR') %}
      type: vector
      address: {{ lookup('env', 'VECTOR_AGGREGATOR') }}
{% else %}
      type: blackhole
{% endif %}
