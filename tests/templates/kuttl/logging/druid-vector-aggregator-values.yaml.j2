---
role: Aggregator
service:
  ports:
  - name: api
    port: 8686
    protocol: TCP
    targetPort: 8686
  - name: vector
    port: 6123
    protocol: TCP
    targetPort: 6000
customConfig:
  api:
    address: 0.0.0.0:8686
    enabled: true
  sources:
    vector:
      address: 0.0.0.0:6000
      type: vector
      version: "2"
  transforms:
    filteredAutomaticLogConfigBrokerDruid:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-broker-automatic-log-config-0" &&
        .container == "druid"
    filteredAutomaticLogConfigBrokerPrepare:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-broker-automatic-log-config-0" &&
        .container == "prepare"
    filteredAutomaticLogConfigBrokerVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-broker-automatic-log-config-0" &&
        .container == "vector"
    filteredCustomLogConfigBrokerDruid:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-broker-custom-log-config-0" &&
        .container == "druid"
    filteredCustomLogConfigBrokerPrepare:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-broker-custom-log-config-0" &&
        .container == "prepare"
    filteredCustomLogConfigBrokerVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-broker-custom-log-config-0" &&
        .container == "vector"
    filteredAutomaticLogConfigCoordinatorDruid:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-coordinator-automatic-log-config-0" &&
        .container == "druid"
    filteredAutomaticLogConfigCoordinatorPrepare:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-coordinator-automatic-log-config-0" &&
        .container == "prepare"
    filteredAutomaticLogConfigCoordinatorVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-coordinator-automatic-log-config-0" &&
        .container == "vector"
    filteredCustomLogConfigCoordinatorDruid:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-coordinator-custom-log-config-0" &&
        .container == "druid"
    filteredCustomLogConfigCoordinatorPrepare:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-coordinator-custom-log-config-0" &&
        .container == "prepare"
    filteredCustomLogConfigCoordinatorVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-coordinator-custom-log-config-0" &&
        .container == "vector"
    filteredAutomaticLogConfigHistoricalDruid:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-historical-automatic-log-config-0" &&
        .container == "druid"
    filteredAutomaticLogConfigHistoricalPrepare:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-historical-automatic-log-config-0" &&
        .container == "prepare"
    filteredAutomaticLogConfigHistoricalVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-historical-automatic-log-config-0" &&
        .container == "vector"
    filteredCustomLogConfigHistoricalDruid:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-historical-custom-log-config-0" &&
        .container == "druid"
    filteredCustomLogConfigHistoricalPrepare:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-historical-custom-log-config-0" &&
        .container == "prepare"
    filteredCustomLogConfigHistoricalVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-historical-custom-log-config-0" &&
        .container == "vector"
    filteredAutomaticLogConfigMiddlemanagerDruid:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-middlemanager-automatic-log-config-0" &&
        .container == "druid"
    filteredAutomaticLogConfigMiddlemanagerPrepare:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-middlemanager-automatic-log-config-0" &&
        .container == "prepare"
    filteredAutomaticLogConfigMiddlemanagerVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-middlemanager-automatic-log-config-0" &&
        .container == "vector"
    filteredCustomLogConfigMiddlemanagerDruid:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-middlemanager-custom-log-config-0" &&
        .container == "druid"
    filteredCustomLogConfigMiddlemanagerPrepare:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-middlemanager-custom-log-config-0" &&
        .container == "prepare"
    filteredCustomLogConfigMiddlemanagerVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-middlemanager-custom-log-config-0" &&
        .container == "vector"
    filteredAutomaticLogConfigRouterDruid:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-router-automatic-log-config-0" &&
        .container == "druid"
    filteredAutomaticLogConfigRouterPrepare:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-router-automatic-log-config-0" &&
        .container == "prepare"
    filteredAutomaticLogConfigRouterVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-router-automatic-log-config-0" &&
        .container == "vector"
    filteredCustomLogConfigRouterDruid:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-router-custom-log-config-0" &&
        .container == "druid"
    filteredCustomLogConfigRouterPrepare:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-router-custom-log-config-0" &&
        .container == "prepare"
    filteredCustomLogConfigRouterVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "test-druid-router-custom-log-config-0" &&
        .container == "vector"
    filteredInvalidEvents:
      type: filter
      inputs: [vector]
      condition: |-
        .timestamp == from_unix_timestamp!(0) ||
        is_null(.level) ||
        is_null(.logger) ||
        is_null(.message)
  sinks:
    out:
      inputs: [filtered*]
{% if lookup('env', 'VECTOR_AGGREGATOR') %}
      type: vector
      address: {{ lookup('env', 'VECTOR_AGGREGATOR') }}
      buffer:
        # Avoid back pressure from VECTOR_AGGREGATOR. The test should
        # not fail if the aggregator is not available.
        when_full: drop_newest
{% else %}
      type: blackhole
{% endif %}
